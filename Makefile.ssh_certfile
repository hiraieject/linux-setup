
# --------------------------------------------- SSH Client
privatekey_generate:
	ssh-keygen
	ls -l ~/.ssh/id_rsa*

privatekey_copytoserver:
ifdef SERVER
	scp ~/.ssh/id_rsa.pub `whoami`@${SERVER}:~/tmp_id_rsa.pub
else
	@echo ""
	@echo "ERROR!!!: SERVER parameter required"
	@echo "    make -f Makefile.ssh_certfile SERVER=<server_name> privatekey_copytoserver"
endif

privatekey_install_onserver:
	cat ~/tmp_id_rsa.pub >> ~/.ssh/authorized_keys

# --------------------------------------------- SSH Server
install_server:
	sudo apt -y update
	sudo apt -y install openssh-server

restart_server:
	sudo service ssh restart

setting_enable_password_login:
	sudo sed -i 's/#   PasswordAuthentication/   PasswordAuthentication/g' /etc/ssh/ssh_config
	sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/ssh_config
	grep PasswordAuthentication /etc/ssh/ssh_config
	sudo systemctl restart ssh

setting_disable_password_login:
	sudo sed -i 's/#   PasswordAuthentication/   PasswordAuthentication/g' /etc/ssh/ssh_config
	sudo sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/ssh_config
	grep PasswordAuthentication /etc/ssh/ssh_config
	sudo systemctl restart ssh

setting_port_20022:
	sudo sed -i 's/#   Port/#   Port/g' /etc/ssh/ssh_config
	sudo sed -i 's/Port 22/Port 20022/g' /etc/ssh/ssh_config
	grep PasswordAuthentication /etc/ssh/ssh_config
	sudo systemctl restart ssh

setting_port_22:
	sudo sed -i 's/#   Port/#   Port/g' /etc/ssh/ssh_config
	sudo sed -i 's/Port 20022/Port 22/g' /etc/ssh/ssh_config
	grep PasswordAuthentication /etc/ssh/ssh_config
	sudo systemctl restart ssh

